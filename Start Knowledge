# 文件名: Market
# 作者: M-Patek
# 上传日期: 2025年9月22日

"""
量化探险日志 - 2025年9月22日

这份日志以代码形式记录了与市场夏尔巴的探险旅程。
它包含了从基础概念到高级策略的所有核心知识点，以及它们的量化实现逻辑。
"""

# --- 核心概念攀登记录 ---
# 1. 资产类型 (大本营):
#    - 股票 (Stocks): 策略的基础交易对象。
#    - 期权 (Options): 高杠杆工具，用于放大收益。
#    - 做空 (Short Selling): 逆向工具，在下跌市场中获利。

# 2. 市场行为 (天气预报):
#    - 趋势 (Trend): 市场的总体方向。
#    - 波动率 (Volatility): 市场的变动幅度。
#    - 动量 (Momentum): 价格变化的速率。

# 3. 量化工具 (测量仪器):
#    - 移动平均线 (MA): 用于判断趋势。
#    - 相对强弱指数 (RSI): 用于衡量动量。
#    - 布林带 (Bollinger Bands): 用于衡量波动率和寻找均值回归机会。
#    - 平均趋向指数 (ADX): 用于判断市场是趋势还是震荡。

# --- 策略路线图绘制 ---
# 这是一个基于所学知识构建的综合量化策略框架。

class QuantStrategy:
    """
    这是一个综合了趋势跟踪和均值回归的量化策略类。
    """
    
    def __init__(self):
        # 初始化策略状态
        self.market_regime = None  # 市场状态: 'trend' 或 'range'
        self.position = 0          # 当前持仓: 1=做多, -1=做空, 0=空仓
        
    def identify_market_regime(self, adx_value):
        """
        根据ADX值判断当前市场状态。
        ADX > 25: 趋势市场
        ADX < 20: 震荡市场
        """
        if adx_value > 25:
            self.market_regime = 'trend'
        elif adx_value < 20:
            self.market_regime = 'range'
        else:
            self.market_regime = None # 处于不确定状态，保持观望

    def generate_signal(self, ma_short, ma_long, rsi, price, bb_upper, bb_lower):
        """
        根据市场状态和指标生成交易信号。
        """
        if self.market_regime == 'trend':
            # 趋势跟踪策略
            if ma_short > ma_long and rsi > 50:
                # 入场: 短MA上穿长MA，且RSI强势
                return 1  # 买入信号 (做多)
            elif ma_short < ma_long and rsi < 50:
                # 入场: 短MA下穿长MA，且RSI弱势
                return -1 # 卖出信号 (做空)
        
        elif self.market_regime == 'range':
            # 均值回归策略
            if price <= bb_lower:
                # 入场: 价格触及下轨
                return 1  # 买入信号
            elif price >= bb_upper:
                # 入场: 价格触及上轨
                return -1 # 卖出信号

        return 0 # 无信号

    def manage_position(self, signal, price, entry_price):
        """
        管理仓位和执行风险控制。
        """
        if signal != 0:
            # 执行新信号，先平仓现有头寸
            self.position = signal
            print(f"新信号: {'买入' if signal == 1 else '卖出'}")
            return price
        
        # 止损逻辑 (固定百分比止损)
        stop_loss_pct = 0.05  # 5%止损
        if self.position == 1 and price <= entry_price * (1 - stop_loss_pct):
            self.position = 0
            print("止损触发，平仓！")
            return price
        elif self.position == -1 and price >= entry_price * (1 + stop_loss_pct):
            self.position = 0
            print("止损触发，平仓！")
            return price

        # 止盈逻辑 (MA交叉) - 简化版，实际需要更多数据点
        if self.position == 1 and ma_short < ma_long:
            self.position = 0
            print("止盈触发，平仓！")
            return price
        elif self.position == -1 and ma_short > ma_long:
            self.position = 0
            print("止盈触发，平仓！")
            return price
            
        return None # 无操作

# --- 风险认知总结 ---
# - 做空风险: 理论上无限，故必须配合严格止损。
# - 仓位管理: 每次交易投入总资金的固定百分比，而非全部。
# - 盈亏比与胜率: 成功的关键在于二者的平衡，而非单纯追求高胜率。
# - 过拟合: 避免策略过度适应历史数据，通过前向测试验证稳健性。
